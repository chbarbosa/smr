{"version":3,"sources":["components/requerimento/RelatorioEmAtraso.jsx","components/template/Main.jsx","components/requerimento/Lista.jsx","Routes.jsx","components/template/Footer.jsx","components/template/Header.jsx","serviceWorker.js","index.js","App.jsx"],"names":["RelatorioEmAtraso","handleClick","props","history","push","Fragment","className","class","scope","onClick","this","Component","withRouter","role","to","exact","path","component","Main","ListaRequerimentos","from","id","Boolean","window","location","hostname","match","ReactDOM","render","Header","Routes","Footer","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRAGMA,E,2MAGFC,YAAc,WACV,EAAKC,MAAMC,QAAQC,KAAK,mB,wEAOxB,OACA,kBAAC,IAAMC,SAAP,KACA,uEACA,2BAAOC,UAAU,mCACb,yFACA,2BAAOC,MAAM,eACT,4BACI,wBAAIC,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,oBAGR,+BACI,wBAAIC,QAASC,KAAKT,aACd,kCACA,qDAEJ,4BACI,kCACA,kDAEJ,4BACI,kCACA,yD,GAjCYU,aAyCjBC,cAAWZ,GCxCX,WAAAE,GAAK,OACpB,0BAAMW,KAAK,OAAON,MAAM,QACpB,yBAAKA,MAAM,aACP,kBAAC,EAAD,SCHO,WAAAL,GAAK,OAChB,yBAAKK,MAAM,kBACP,8EACA,2BAAOD,UAAU,mCACb,6EACA,2BAAOC,MAAM,eACT,4BACI,wBAAIC,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,qCACA,wBAAIA,MAAM,OAAV,mBACA,wBAAIA,MAAM,OAAV,kBAGR,+BACI,4BACI,2CACA,wDACA,0CACA,0CACA,kCACA,6CAEJ,4BACI,2CACA,wDACA,0CACA,0CACA,kCACA,6CAEJ,4BACI,2CACA,wDACA,0CACA,0CACA,kCACA,6CAEJ,4BACI,2CACA,wDACA,0CACA,0CACA,kCACA,6CAEJ,4BACI,2CACA,wDACA,0CACA,0CACA,kCACA,4CAEJ,4BACI,2CACA,8CACA,0CACA,0CACA,kCACA,2CAKZ,yBAAKF,UAAU,8BACX,kBAAC,IAAD,CAAMA,UAAU,oBAAoBQ,GAAG,KAAvC,aClEG,WAAAZ,GAAK,OAChB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWE,IACxC,kBAAC,IAAD,CAAUC,KAAK,IAAIN,GAAG,QCRf,WAAAZ,GAAK,OAChB,4BAAQmB,GAAG,SAASd,MAAM,kEACtB,yBAAKD,UAAU,QAAf,oBACA,6BACI,sCACA,0BAAMA,UAAU,QAAhB,6BACA,0BAAMA,UAAU,QAAhB,aCNG,WAAAJ,GAAK,OAChB,4BAAQI,UAAU,mBACd,yBAAKA,UAAU,8BACX,8C,MCOQgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,mBCCD,SAAA1B,GAAK,OAChB,kBAAC,IAAD,KACI,yBAAKI,UAAU,OACX,kBAACuB,EAAD,MACA,kBAACC,EAAD,MACA,kBAACC,EAAD,UDNI,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.83a494f8.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom';\n\nclass RelatorioEmAtraso extends Component {\n\n\n    handleClick = () => {\n        this.props.history.push(\"/requerimentos\");\n        // this.context.router.history.push(`/target`);\n    }\n\n\n\n    render(){\n        return (\n        <React.Fragment>\n        <h2>Requerimentos com atendimento em atraso</h2>\n        <table className=\"table table-striped table-hover\">\n            <caption>Requerimentos ordenados por situação de atraso</caption>\n            <thead class=\"thead-light\">\n                <tr>\n                    <th scope=\"col\">Total</th>\n                    <th scope=\"col\">Situação</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr onClick={this.handleClick}>\n                    <td>75</td>\n                    <td>até três meses</td>\n                </tr>\n                <tr>\n                    <td>50</td>\n                    <td>até seis meses</td>\n                </tr>\n                <tr>\n                    <td>35</td>\n                    <td>até nove meses</td>\n                </tr>\n            </tbody>\n        </table>\n        </React.Fragment>\n    )}\n}\n\nexport default withRouter(RelatorioEmAtraso);","import React from 'react'\n\nimport RelatorioEmAtraso from '../requerimento/RelatorioEmAtraso'\n\nexport default props =>\n<main role=\"main\" class=\"mt-5\">\n    <div class=\"container\">\n        <RelatorioEmAtraso />\n    </div>\n</main>","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nexport default props =>\n    <div class=\"container mt-5\">\n        <h2>Lista de Requerimentos em atraso de seis meses</h2>\n        <table className=\"table table-striped table-hover\">\n            <caption>Requerimentos agrupados por procuradoria</caption>\n            <thead class=\"thead-light\">\n                <tr>\n                    <th scope=\"col\">Número</th>\n                    <th scope=\"col\">Situação</th>\n                    <th scope=\"col\">Data de Abertura</th>\n                    <th scope=\"col\">Data da útilma Alteração</th>\n                    <th scope=\"col\">Dias em Atraso </th>\n                    <th scope=\"col\">Procuradoria</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>20190000017</td>\n                    <td>Recebido na Procuradoria</td>\n                    <td>09/05/2019</td>\n                    <td>06/06/2019</td>\n                    <td>70</td>\n                    <td>PRFN3 (Sede)</td>\n                </tr>\n                <tr>\n                    <td>20190000018</td>\n                    <td>Recebido na Procuradoria</td>\n                    <td>09/05/2019</td>\n                    <td>06/06/2019</td>\n                    <td>70</td>\n                    <td>PRFN3 (Sede)</td>\n                </tr>\n                <tr>\n                    <td>20190000019</td>\n                    <td>Recebido na Procuradoria</td>\n                    <td>09/05/2019</td>\n                    <td>06/06/2019</td>\n                    <td>70</td>\n                    <td>PRFN3 (Sede)</td>\n                </tr>\n                <tr>\n                    <td>20190000020</td>\n                    <td>Recebido na Procuradoria</td>\n                    <td>09/05/2019</td>\n                    <td>06/06/2019</td>\n                    <td>70</td>\n                    <td>PRFN3 (Sede)</td>\n                </tr>\n                <tr>\n                    <td>20190000021</td>\n                    <td>Recebido na Procuradoria</td>\n                    <td>09/06/2019</td>\n                    <td>16/06/2019</td>\n                    <td>60</td>\n                    <td>Brasília</td>\n                </tr>\n                <tr>\n                    <td>20190000107</td>\n                    <td>Distribuído</td>\n                    <td>19/05/2019</td>\n                    <td>06/06/2019</td>\n                    <td>40</td>\n                    <td>Ceará</td>\n                </tr>\n            </tbody>\n\n        </table>\n        <div className=\"row justify-content-center\">\n            <Link className=\"btn btn-secondary\" to=\"/\">\n                voltar\n            </Link>\n        </div>\n    </div>","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router'\n\nimport Main from './components/template/Main'\nimport ListaRequerimentos from './components/requerimento/Lista'\n\nexport default props => \n    <Switch>\n        <Route exact path='/' component={Main} />\n        <Route path='/requerimentos' component={ListaRequerimentos} />\n        <Redirect from='*' to='/' />\n    </Switch>","import React from 'react'\n\nexport default props => \n    <footer id=\"footer\" class=\"fixed-bottom d-flex align-items-center justify-content-between\">\n        <div className=\"ml-5\">Produto | SERPRO</div>\n        <div>\n            <span>PGFN</span>\n            <span className=\"ml-5\">Ministério da Economia</span>\n            <span className=\"mx-5\">Brasil</span></div>\n    </footer>","import React from 'react'\n\nexport default props => \n    <header className=\"container-fluid\">\n        <div className=\"row justify-content-center\">\n            <h1>SMR da PGFN</h1>\n        </div>\n    </header>","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport Routes from './Routes'\nimport Footer from './components/template/Footer'\nimport Header from './components/template/Header'\nimport './App.css';\n\nexport default props =>\n    <BrowserRouter>\n        <div className=\"app\">\n            <Header />\n            <Routes />\n            <Footer />\n        </div>\n    </BrowserRouter>"],"sourceRoot":""}